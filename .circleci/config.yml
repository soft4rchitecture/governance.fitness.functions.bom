# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1


# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  # retrieve-gpg-key:
  #   jobs:
  #     - print-gpg-private-key:
  #         context: soft4rchitecture
  release:
    jobs:
      - circleci-maven-release-orb/run-maven-release:
          context: soft4rchitecture
          name: release-dry-run
          mvn-release-perform-command: mvn --batch-mode release:perform -DdryRun=true -s .circleci/.maven.xml
          ssh-fingerprints: "e7:2e:d8:10:66:6a:6d:64:62:52:0a:dc:28:1e:eb:28"
      - request-testing:
          type: approval
          requires: 
            - release-dry-run
      - circleci-maven-release-orb/run-maven-release:
          context: soft4rchitecture
          name: release
          ssh-fingerprints: "e7:2e:d8:10:66:6a:6d:64:62:52:0a:dc:28:1e:eb:28"
          requires:
            - release-dry-run
            - request-testing


orbs:
  circleci-maven-release-orb: sonatype-nexus-community/circleci-maven-release-orb@0.0.16

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  print-gpg-private-key:
    docker: 
      - image: cimg/base:2021.04
    steps:
      - run:
          name: print
          command: echo "secret is ${SECRING_GPG_ASC_BASE64}"
  # Below is the definition of your job to build and test your app, you can rename and customize it as you want.
  build-and-test:
    # These next lines define a Docker executor: https://circleci.com/docs/2.0/executor-types/
    # You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # Be sure to update the Docker image tag below to openjdk version of your application.
    # A list of available CircleCI Docker Convenience Images are available here: https://circleci.com/developer/images/image/cimg/openjdk
    docker:
      - image: cimg/openjdk:11.0
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      # Checkout the code as the first step. 
      - checkout
      # Use mvn clean and package as the standard maven build phase
      - run:
          name: Build
          command: mvn -B -DskipTests clean package
      # Then run your tests!
      - run:
          name: Test
          command: mvn test
